replicaCount: 1
clusterName: eshoponweb-k8s
pathBase: /webmvc
image:
  repository: eshop/webmvc
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
  tls: []

resources: {}


nodeSelector: {}

tolerations: []

affinity: {}

# env defines the environment variables that will be declared in the pod
env:
  urls:
  # configmap declares variables which value is taken from the config map defined in template configmap.yaml (name is name of var and key the key in configmap).
  configmap:
    - name: ApplicationInsights__InstrumentationKey
      key: all__InstrumentationKey
    - name: UseLoadTest
      key: all_EnableLoadTest
    - name: DPConnectionString
      key: webmvc__keystore
    - name: PurchaseUrl
      key: internalurls__apigwws
    - name: ExternalPurchaseUrl
      key: urls__apigwws
    - name: CallBackUrl
      key: urls__mvc
    - name: IdentityUrl
      key: urls__IdentityUrl
    - name: MarketingUrl
      key: internalurls__apigwwm
    - name: IdentityUrlHC
      key: internalurls__identity__hc      
    - name: SignalrHubUrl
      key: urls__apigwws
      # values define environment variables with a fixed value (no configmap involved) (name is name of var, and value is its value)
  values:
    - name: ASPNETCORE_ENVIRONMENT
      value: Development
    - name: OrchestratorType
      value: 'K8S'
    - name: IsClusterEnv
      value: 'True'
inf:
  mesh:
    enabled: false          # True to enable Linkerd (set by deploy-all.ps1)
  tls:
    enabled: false          # True to enable TLS (set by deploy-all.ps1)
    issuer: ""              # cert-manager issuer to use for retrieving certs (set by deploy-all.ps1)
  sql:                      # inf.sql defines the sql server databases & logins
#    host:  my-sql-server   # Uncomment to specify a custom sql-server to be used. By default "sql-data-<appname>" will be used  
    common:
      user: sa              # SQL user
      pwd: Pass@word        # SQL pwd
      pid: Developer
    catalog:                # inf.sql.catalog: settings for the catalog-api sql (user, pwd, db)
      db: CatalogDb         # Catalog API SQL db name
    ordering:               # inf.sql.ordering: settings for the ordering-api sql (user, pwd, db)
      db: OrderingDb        # Ordering API SQL db name
    identity:
      db: IdentityDb        # Ordering API SQL db name
    marketing:
      db: MarketingDb       # Marketing API SQL db name
    webhooks:
      db: WebhooksDb        # Webhooks DB
  mongo:
#    host: my-nosql-data    # Uncomment to use specify custom mongo host. By default nosql-data is used
    locations:
      database: LocationsDb
    marketing:
      database: MarketingDb
  redis:                    # inf.redis defines the redis' connection strings
    basket:     
      svc: basket-data      # Name of k8s svc for basket redis     
      constr: basket-data   # Connection string to Redis used by Basket API
    keystore:
      svc: keystore-data    # Name of k8s svc for keystore-data redis
      constr: keystore-data # Connection string to Redis used as a Keystore (by Identity API)
  eventbus:
    svc: rabbitmq           # Name of k8s svc for rabbitmq
    constr: rabbitmq        # Event bus connection string
    useAzure: false         # true if use Azure Service Bus. False if RabbitMQ
  appinsights:
      key: ""               # App insights to use
  k8s:                      # inf.k8s defines Kubernetes cluster global config
    dns:  ""                # k8s external  DNS. This value or ip value MUST BE PROVIDED
    local: false            # True when deploying on "local K8s" provided by Docker Desktop.
  misc:                     # inf.misc contains miscellaneous configuration related to infrastructure
    useLoadTest: false      # If running under loading test or not
    useAzureStorage: false  # If catalog api uses azure storage or not
#  registry:                # Uncomment "registry" to specify registry secret
#    secretName:            # secretName is the name of the secret inside k8s   
#    server:                # Registry login server
#    login:                 # User login
#    pwd:                   # User pwd
#    pwd:                   # User pwd